@model RealEstate.Persistance.Models.ViewModel.HomeAdmin
@{
    ViewData["Title"] = "Dashboard Administrativo";
}

<div class="container-fluid">
    <div class="mb-4 position-relative text-white">
        <img src="~/images/program/dashboard.jpg" alt="Portada" class="img-fluid w-100"
             style="max-height: 300px; object-fit: cover; filter: brightness(60%);" />
        <h1 class="position-absolute top-50 start-50 translate-middle text-center fw-bold display-5">
            Dashboard Del Administrador
        </h1>
    </div>

    <!-- Content Row -->
    <div class="row">
        <!-- Propiedades Disponibles Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-primary shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                                Propiedades Disponibles
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.PropiedadesModelView.Count(p => p.Disponibilidad)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-home fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Propiedades Vendidas Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Propiedades Vendidas
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">
                                @Model.PropiedadesModelView.Count(p => p.Vendida == true)
                            </div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-handshake fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Agentes Activos Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Agentes Activos
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.UsuariosModelView.Count(u => u.Rol == "Agente" && u.IsActive)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user-tie fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Agentes Inactivos Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Agentes Inactivos
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.UsuariosModelView.Count(u => u.Rol == "Agente" && !u.IsActive)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user-slash fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Second Row -->
    <div class="row">
        <!-- Clientes Activos Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-success shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                                Clientes Activos
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.UsuariosModelView.Count(u => u.Rol == "Cliente" && u.IsActive)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-users fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Clientes Inactivos Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-danger shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-danger text-uppercase mb-1">
                                Clientes Inactivos
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.UsuariosModelView.Count(u => u.Rol == "Cliente" && !u.IsActive)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-user-times fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Desarrolladores Activos Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-info shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                                Desarrolladores Activos
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.UsuariosModelView.Count(u => u.Rol == "Desarrollador" && u.IsActive)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-building fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Desarrolladores Inactivos Card -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="card border-left-warning shadow h-100 py-2">
                <div class="card-body">
                    <div class="row no-gutters align-items-center">
                        <div class="col mr-2">
                            <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                                Desarrolladores Inactivos
                            </div>
                            <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.UsuariosModelView.Count(u => u.Rol == "Desarrollador" && !u.IsActive)</div>
                        </div>
                        <div class="col-auto">
                            <i class="fas fa-building fa-2x text-gray-300"></i>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Row -->
    <div class="row">
        <!-- Pie Chart -->
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Distribución de Usuarios</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="myPieChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        <span class="mr-2">
                            <i class="fas fa-circle text-primary"></i> Agentes
                        </span>
                        <span class="mr-2">
                            <i class="fas fa-circle text-success"></i> Clientes
                        </span>
                        <span class="mr-2">
                            <i class="fas fa-circle text-info"></i> Desarrolladores
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Properties Chart -->
        <div class="col-xl-6 col-lg-6">
            <div class="card shadow mb-4">
                <!-- Card Header - Dropdown -->
                <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                    <h6 class="m-0 font-weight-bold text-primary">Resumen de Propiedades</h6>
                </div>
                <!-- Card Body -->
                <div class="card-body">
                    <div class="chart-bar pt-4 pb-2">
                        <canvas id="myBarChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Recent Activity -->
    <div class="card shadow mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold text-primary">Actividad Reciente</h6>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="dataTable" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Usuario</th>
                            <th>Rol</th>
                            <th>Propiedad</th>
                            <th>Estado</th>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.PropiedadesModelView.Take(5))
                        {
                            <tr>
                                <td>Propiedad @item.PropiedadID</td>
                                <td>Propiedad</td>
                                <td>@item.PropiedadID</td>
                                <td>
                                    @if (item.Vendida.HasValue && item.Vendida.Value)
                                    {
                                        <span class="badge badge-success">Vendida</span>
                                    }
                                    else if (item.Disponibilidad)
                                    {
                                        <span class="badge badge-primary">Disponible</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-warning">No disponible</span>
                                    }
                                </td>
                                <td>
                                    <a href="#" class="btn btn-info btn-sm">Ver detalles</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Page level plugins -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Pie Chart
        var ctx = document.getElementById("myPieChart");
        var myPieChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["Agentes", "Clientes", "Desarrolladores"],
                datasets: [{
                    data: [
        @Model.UsuariosModelView.Count(u => u.Rol == "Agente"),
        @Model.UsuariosModelView.Count(u => u.Rol == "Cliente"),
        @Model.UsuariosModelView.Count(u => u.Rol == "Desarrollador")
                            ],
                    backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc'],
                    hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf'],
                    hoverBorderColor: "rgba(234, 236, 244, 1)",
                }],
            },
            options: {
                maintainAspectRatio: false,
                tooltips: {
                    backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                    borderColor: '#dddfeb',
                    borderWidth: 1,
                    xPadding: 15,
                    yPadding: 15,
                    displayColors: false,
                    caretPadding: 10,
                },
                legend: {
                    display: false
                },
                cutoutPercentage: 80,
            },
        });

        // Bar Chart
        var ctxBar = document.getElementById("myBarChart");
        var myBarChart = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: ["Disponibles", "Vendidas"],
                datasets: [{
                    label: "Propiedades",
                    backgroundColor: ['#4e73df', '#1cc88a'],
                    hoverBackgroundColor: ['#2e59d9', '#17a673'],
                    borderColor: "#4e73df",
                    data: [
        @Model.PropiedadesModelView.Count(p => p.Disponibilidad),
        @Model.PropiedadesModelView.Count(p => p.Vendida == true)
                            ],
                }],
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                legend: {
                    display: false
                },
            }
        });
    </script>
}


