@model RealEstate.Persistance.Models.ViewModel.HomeAdmin
@{
    ViewData["Title"] = "Dashboard Administrativo";
}

<!-- Estilos premium -->
<style>
    :root {
        --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        --success-gradient: linear-gradient(135deg, #0cebeb 0%, #20e3b2 50%, #29ffc6 100%);
        --info-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
        --warning-gradient: linear-gradient(135deg, #f6d365 0%, #fda085 100%);
        --danger-gradient: linear-gradient(135deg, #f83600 0%, #f9d423 100%);
        --dark-gradient: linear-gradient(135deg, #434343 0%, #000000 100%);
        --light-gradient: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
    }

    .dashboard-header {
        position: relative;
        overflow: hidden;
        border-radius: 0 0 20px 20px;
        box-shadow: 0 15px 30px rgba(0,0,0,0.1);
        margin-bottom: 2.5rem;
    }

    .dashboard-title {
        font-weight: 800;
        letter-spacing: 1.5px;
        text-shadow: 2px 2px 8px rgba(0,0,0,0.3);
        font-size: 2.8rem;
    }

    .stat-card {
        border: none;
        border-radius: 16px;
        overflow: hidden;
        transition: all 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        position: relative;
        background: white;
        z-index: 1;
    }

        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: var(--card-gradient);
            opacity: 0;
            transition: opacity 0.4s ease;
            z-index: -1;
        }

        .stat-card:hover {
            transform: translateY(-8px);
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
        }

            .stat-card:hover::before {
                opacity: 0.1;
            }

        .stat-card .card-icon-container {
            width: 60px;
            height: 60px;
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.8rem;
            color: white;
            margin-bottom: 1rem;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
            transition: all 0.3s ease;
        }

        .stat-card:hover .card-icon-container {
            transform: scale(1.1) rotate(5deg);
            box-shadow: 0 8px 25px rgba(0,0,0,0.15);
        }

        .stat-card .card-title {
            font-size: 0.9rem;
            letter-spacing: 0.8px;
            color: #6c757d;
            font-weight: 600;
            text-transform: uppercase;
            margin-bottom: 0.5rem;
        }

        .stat-card .card-value {
            font-size: 2.2rem;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 0.5rem;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .stat-card .card-footer-text {
            font-size: 0.8rem;
            color: #7f8c8d;
            font-weight: 500;
        }

    /* Colores específicos para cada tarjeta */
    .card-available {
        --card-gradient: var(--primary-gradient);
    }

    .card-sold {
        --card-gradient: var(--success-gradient);
    }

    .card-active-agent {
        --card-gradient: var(--info-gradient);
    }

    .card-inactive-agent {
        --card-gradient: var(--warning-gradient);
    }

    .card-active-client {
        --card-gradient: var(--dark-gradient);
    }

    .card-inactive-client {
        --card-gradient: var(--danger-gradient);
    }

    .card-active-developer {
        --card-gradient: linear-gradient(135deg, #8E2DE2 0%, #4A00E0 100%);
    }

    .card-inactive-developer {
        --card-gradient: linear-gradient(135deg, #f46b45 0%, #eea849 100%);
    }

    /* Colores para los icon containers */
    .icon-primary {
        background: var(--primary-gradient);
    }

    .icon-success {
        background: var(--success-gradient);
    }

    .icon-info {
        background: var(--info-gradient);
    }

    .icon-warning {
        background: var(--warning-gradient);
    }

    .icon-danger {
        background: var(--danger-gradient);
    }

    .icon-dark {
        background: var(--dark-gradient);
    }

    .icon-purple {
        background: linear-gradient(135deg, #8E2DE2 0%, #4A00E0 100%);
    }

    .icon-orange {
        background: linear-gradient(135deg, #f46b45 0%, #eea849 100%);
    }

    /* Chart cards */
    .chart-card {
        border: none;
        border-radius: 16px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        transition: all 0.3s ease;
        background: white;
    }

        .chart-card:hover {
            box-shadow: 0 15px 35px rgba(0,0,0,0.15);
        }

        .chart-card .card-header {
            background: white;
            border-bottom: 1px solid rgba(0,0,0,0.05);
            font-weight: 700;
            letter-spacing: 0.5px;
            border-radius: 16px 16px 0 0 !important;
            font-size: 1.1rem;
            color: #2c3e50;
        }

    /* Activity card */
    .activity-card {
        border: none;
        border-radius: 16px;
        box-shadow: 0 10px 25px rgba(0,0,0,0.08);
        overflow: hidden;
        background: white;
    }

        .activity-card .card-header {
            background: white;
            border-bottom: 1px solid rgba(0,0,0,0.05);
            font-weight: 700;
            letter-spacing: 0.5px;
            font-size: 1.1rem;
            color: #2c3e50;
        }

    .badge {
        font-weight: 600;
        padding: 6px 12px;
        border-radius: 10px;
        font-size: 0.75rem;
        letter-spacing: 0.5px;
    }

    .badge-primary {
        background: rgba(102, 126, 234, 0.1);
        color: #667eea;
    }

    .badge-success {
        background: rgba(12, 235, 235, 0.1);
        color: #0cebeb;
    }

    .badge-warning {
        background: rgba(246, 211, 101, 0.1);
        color: #f6d365;
    }

    .btn-detail {
        background: rgba(255, 255, 255, 0.9);
        border: 1px solid rgba(0,0,0,0.05);
        color: #4A00E0;
        font-weight: 600;
        border-radius: 10px;
        transition: all 0.3s ease;
        padding: 8px 16px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.05);
    }

        .btn-detail:hover {
            background: #4A00E0;
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(74, 0, 224, 0.2);
        }

    .table-hover tbody tr:hover {
        background: rgba(0,0,0,0.02);
        transform: translateX(5px);
        transition: all 0.3s ease;
    }

    .table thead th {
        border-top: none;
        border-bottom: 1px solid rgba(0,0,0,0.05);
        font-weight: 700;
        letter-spacing: 0.5px;
        color: #7f8c8d;
        text-transform: uppercase;
        font-size: 0.8rem;
    }
</style>

<div class="container-fluid px-4">
    <!-- Header con imagen -->
    <div class="dashboard-header">
        <div class="position-relative overflow-hidden rounded-bottom">
            <img src="~/images/program/dashboard.jpg" alt="Portada" class="img-fluid w-100"
                 style="height: 320px; object-fit: cover; filter: brightness(65%);" />
            <div class="position-absolute top-0 start-0 w-100 h-100 d-flex align-items-center justify-content-center flex-column">
                <h1 class="dashboard-title text-white mb-3">
                    PANEL ADMINISTRATIVO
                </h1>
                <p class="text-white mb-0" style="font-size: 1.2rem; letter-spacing: 1px; opacity: 0.9;">Resumen completo de su negocio inmobiliario</p>
            </div>
        </div>
    </div>

    <!-- Primera fila de tarjetas -->
    <div class="row mb-4">
        <!-- Propiedades Disponibles -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-available h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-primary mb-3">
                            <i class="fas fa-home"></i>
                        </div>
                        <h6 class="card-title">Propiedades Disponibles</h6>
                        <h2 class="card-value">@Model.PropiedadesModelView.Count(p => p.Disponibilidad)</h2>
                        <p class="card-footer-text mb-0">Propiedades listadas actualmente</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Propiedades Vendidas -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-sold h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-success mb-3">
                            <i class="fas fa-handshake"></i>
                        </div>
                        <h6 class="card-title">Propiedades Vendidas</h6>
                        <h2 class="card-value">@Model.PropiedadesModelView.Count(p => p.Vendida == true)</h2>
                        <p class="card-footer-text mb-0">Transacciones completadas</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Agentes Activos -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-active-agent h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-info mb-3">
                            <i class="fas fa-user-tie"></i>
                        </div>
                        <h6 class="card-title">Agentes Activos</h6>
                        <h2 class="card-value">@Model.UsuariosModelView.Count(u => u.Rol == "Agente" && u.IsActive)</h2>
                        <p class="card-footer-text mb-0">Agentes trabajando</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Agentes Inactivos -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-inactive-agent h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-warning mb-3">
                            <i class="fas fa-user-slash"></i>
                        </div>
                        <h6 class="card-title">Agentes Inactivos</h6>
                        <h2 class="card-value">@Model.UsuariosModelView.Count(u => u.Rol == "Agente" && !u.IsActive)</h2>
                        <p class="card-footer-text mb-0">Agentes no disponibles</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Segunda fila de tarjetas -->
    <div class="row mb-4">
        <!-- Clientes Activos -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-active-client h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-dark mb-3">
                            <i class="fas fa-users"></i>
                        </div>
                        <h6 class="card-title">Clientes Activos</h6>
                        <h2 class="card-value">@Model.UsuariosModelView.Count(u => u.Rol == "Cliente" && u.IsActive)</h2>
                        <p class="card-footer-text mb-0">Clientes en el sistema</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Clientes Inactivos -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-inactive-client h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-danger mb-3">
                            <i class="fas fa-user-times"></i>
                        </div>
                        <h6 class="card-title">Clientes Inactivos</h6>
                        <h2 class="card-value">@Model.UsuariosModelView.Count(u => u.Rol == "Cliente" && !u.IsActive)</h2>
                        <p class="card-footer-text mb-0">Clientes no activos</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Desarrolladores Activos -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-active-developer h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-purple mb-3">
                            <i class="fas fa-building"></i>
                        </div>
                        <h6 class="card-title">Desarrolladores Activos</h6>
                        <h2 class="card-value">@Model.UsuariosModelView.Count(u => u.Rol == "Desarrollador" && u.IsActive)</h2>
                        <p class="card-footer-text mb-0">Socios comerciales</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Desarrolladores Inactivos -->
        <div class="col-xl-3 col-md-6 mb-4">
            <div class="stat-card card-inactive-developer h-100">
                <div class="card-body p-4">
                    <div class="d-flex flex-column">
                        <div class="card-icon-container icon-orange mb-3">
                            <i class="fas fa-building"></i>
                        </div>
                        <h6 class="card-title">Desarrolladores Inactivos</h6>
                        <h2 class="card-value">@Model.UsuariosModelView.Count(u => u.Rol == "Desarrollador" && !u.IsActive)</h2>
                        <p class="card-footer-text mb-0">Socios no activos</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Gráficos -->
    <div class="row mb-4">
        <!-- Gráfico de pastel -->
        <div class="col-xl-6 col-lg-6 mb-4">
            <div class="chart-card card h-100">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold">Distribución de Usuarios</h6>
                </div>
                <div class="card-body">
                    <div class="chart-pie pt-4 pb-2">
                        <canvas id="myPieChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        <span class="mr-3">
                            <i class="fas fa-circle text-primary"></i> Agentes
                        </span>
                        <span class="mr-3">
                            <i class="fas fa-circle text-success"></i> Clientes
                        </span>
                        <span class="mr-3">
                            <i class="fas fa-circle text-info"></i> Desarrolladores
                        </span>
                    </div>
                </div>
            </div>
        </div>

        <!-- Gráfico de barras -->
        <div class="col-xl-6 col-lg-6 mb-4">
            <div class="chart-card card h-100">
                <div class="card-header py-3">
                    <h6 class="m-0 font-weight-bold">Resumen de Propiedades</h6>
                </div>
                <div class="card-body">
                    <div class="chart-bar pt-4 pb-2">
                        <canvas id="myBarChart"></canvas>
                    </div>
                    <div class="mt-4 text-center small">
                        <span class="mr-3">
                            <i class="fas fa-square text-primary"></i> Disponibles
                        </span>
                        <span class="mr-3">
                            <i class="fas fa-square text-success"></i> Vendidas
                        </span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Actividad Reciente -->
    <div class="card activity-card mb-4">
        <div class="card-header py-3">
            <h6 class="m-0 font-weight-bold">Actividad Reciente</h6>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="table table-hover mb-0">
                    <thead>
                        <tr>
                            <th>Usuario</th>
                            <th>Rol</th>
                            <th>Propiedad</th>
                            <th>Estado</th>
                            <th>Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.PropiedadesModelView.Take(5))
                        {
                            <tr>
                                <td>Propiedad @item.PropiedadID</td>
                                <td>Propiedad</td>
                                <td>@item.PropiedadID</td>
                                <td>
                                    @if (item.Vendida.HasValue && item.Vendida.Value)
                                    {
                                        <span class="badge badge-success">Vendida</span>
                                    }
                                    else if (item.Disponibilidad)
                                    {
                                        <span class="badge badge-primary">Disponible</span>
                                    }
                                    else
                                    {
                                        <span class="badge badge-warning">No disponible</span>
                                    }
                                </td>
                                <td>
                                    <a href="#" class="btn btn-detail btn-sm">Ver detalles</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <!-- Page level plugins -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Pie Chart
        var ctx = document.getElementById("myPieChart");
        var myPieChart = new Chart(ctx, {
            type: 'doughnut',
            data: {
                labels: ["Agentes", "Clientes", "Desarrolladores"],
                datasets: [{
                    data: [
        @Model.UsuariosModelView.Count(u => u.Rol == "Agente"),
        @Model.UsuariosModelView.Count(u => u.Rol == "Cliente"),
        @Model.UsuariosModelView.Count(u => u.Rol == "Desarrollador")
                            ],
                    backgroundColor: ['#667eea', '#0cebeb', '#4facfe'],
                    hoverBackgroundColor: ['#5a6fd1', '#0bd4d4', '#459ce5'],
                    borderWidth: 0,
                }],
            },
            options: {
                maintainAspectRatio: false,
                cutout: '75%',
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyColor: "#2c3e50", 
                        titleColor: "#2c3e50", 
                        borderWidth: 1,
                        displayColors: false,
                        caretPadding: 10,
                        callbacks: {
                            label: function (context) {
                                let label = context.label || '';
                                let value = context.raw || 0;
                                let total = context.dataset.data.reduce((a, b) => a + b, 0);
                                let percentage = Math.round((value / total) * 100);
                                return `${label}: ${value} (${percentage}%)`;
                            }
                        }
                    }
                }
            },
        });

        // Bar Chart
        var ctxBar = document.getElementById("myBarChart");
        var myBarChart = new Chart(ctxBar, {
            type: 'bar',
            data: {
                labels: ["Disponibles", "Vendidas"],
                datasets: [{
                    label: "Propiedades",
                    backgroundColor: ['#667eea', '#0cebeb'],
                    hoverBackgroundColor: ['#5a6fd1', '#0bd4d4'],
                    borderColor: "transparent",
                    borderWidth: 0,
                    borderRadius: 8,
                    data: [
        @Model.PropiedadesModelView.Count(p => p.Disponibilidad),
        @Model.PropiedadesModelView.Count(p => p.Vendida == true)
                            ],
                }],
            },
            options: {
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        grid: {
                            display: true,
                            drawBorder: false,
                            color: 'rgba(0,0,0,0.03)'
                        },
                        ticks: {
                            padding: 10
                        }
                    },
                    x: {
                        grid: {
                            display: false,
                            drawBorder: false
                        }
                    }
                },
                plugins: {
                    legend: {
                        display: false
                    },
                    tooltip: {
                        backgroundColor: "rgb(255,255,255)",
                        bodyColor: "#2c3e50", 
                        titleColor: "#2c3e50", 
                        borderColor: '#dddfeb',
                        borderWidth: 1,
                        displayColors: false,
                        caretPadding: 10,
                    }
                }
            }
        });
    </script>
}