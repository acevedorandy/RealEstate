@using System.Security.Claims
@model IEnumerable<RealEstate.Persistance.Models.ViewModel.MensajesViewModel>
@{
    ViewData["Title"] = "Conversación";
    var currentUserId = User.FindFirstValue(ClaimTypes.NameIdentifier);
    var propiedad = Model.FirstOrDefault();
}

@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" />
    <style>
        :root {
            --primary-color: #4361ee;
            --secondary-color: #3f37c9;
            --accent-color: #f72585;
            --light-color: #f8f9fa;
            --dark-color: #212529;
            --gray-color: #6c757d;
            --gradient-primary: linear-gradient(135deg, #4361ee 0%, #3f37c9 100%);
            --gradient-accent: linear-gradient(135deg, #f72585 0%, #b5179e 100%);
        }

        /* Hero Section with Cover Photo */
        .chat-cover-photo {
            width: 100%;
            height: 200px;
            object-fit: cover;
            object-position: center;
            border-radius: 0;
            margin-bottom: -50px;
            z-index: 1;
            position: relative;
            box-shadow: 0 5px 25px rgba(0,0,0,0.1);
        }

        .chat-detail-hero {
            background: linear-gradient(135deg, rgba(67,97,238,0.9) 0%, rgba(63,55,201,0.95) 100%);
            color: white;
            padding: 4rem 0 2rem;
            border-radius: 15px;
            margin: -50px 20px 2rem;
            box-shadow: 0 15px 40px rgba(67,97,238,0.3);
            position: relative;
            z-index: 2;
        }

        .chat-detail-header {
            display: flex;
            align-items: center;
            max-width: 1200px;
            margin: 0 auto;
            padding: 0 2rem;
            position: relative;
        }

        .property-thumbnail {
            width: 100px;
            height: 100px;
            border-radius: 12px;
            object-fit: cover;
            margin-right: 2rem;
            border: 3px solid white;
            box-shadow: 0 10px 25px rgba(0,0,0,0.2);
            transform: translateY(-20px);
            background: white;
            z-index: 3;
        }

        .chat-detail-title {
            flex: 1;
            padding-top: 20px;
        }

            .chat-detail-title h1 {
                font-size: 2rem;
                font-weight: 700;
                margin-bottom: 0.5rem;
                text-shadow: 0 2px 5px rgba(0,0,0,0.1);
            }

            .chat-detail-title p {
                font-size: 1.1rem;
                opacity: 0.9;
                margin-bottom: 0;
            }

        .chat-back-btn {
            background: white;
            color: var(--primary-color);
            border: none;
            border-radius: 8px;
            padding: 0.7rem 1.5rem;
            font-weight: 600;
            transition: all 0.3s ease;
            display: flex;
            align-items: center;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
        }

            .chat-back-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 7px 20px rgba(0,0,0,0.15);
            }

        /* Chat Container */
        .chat-detail-container {
            max-width: 900px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 15px 40px rgba(0,0,0,0.08);
            overflow: hidden;
            margin-bottom: 3rem;
            border: 1px solid rgba(0,0,0,0.05);
        }

        /* Messages Area */
        .chat-messages {
            height: 500px;
            overflow-y: auto;
            padding: 2rem;
            background-color: #f9f9ff;
            background-image: radial-gradient(circle at 1px 1px, rgba(0,0,0,0.03) 1px, transparent 0);
            background-size: 20px 20px;
        }

        .message {
            max-width: 70%;
            margin-bottom: 1.5rem;
            padding: 1.2rem 1.5rem;
            border-radius: 18px;
            position: relative;
            word-wrap: break-word;
            animation: fadeIn 0.3s ease-out;
            line-height: 1.5;
            transition: all 0.2s ease;
        }

        @@keyframes fadeIn {
            from {
                opacity: 0;
                transform: translateY(10px);
            }

            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .message.sent {
            background: var(--gradient-primary);
            color: white;
            margin-left: auto;
            border-bottom-right-radius: 5px;
            box-shadow: 0 5px 20px rgba(67,97,238,0.2);
        }

        .message.received {
            background: white;
            color: var(--dark-color);
            margin-right: auto;
            border-bottom-left-radius: 5px;
            box-shadow: 0 5px 20px rgba(0,0,0,0.08);
            border: 1px solid rgba(0,0,0,0.05);
        }

        .message:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .message.new::after {
            content: "Nuevo";
            position: absolute;
            top: -10px;
            right: 15px;
            background: var(--accent-color);
            color: white;
            font-size: 0.7rem;
            padding: 0.2rem 0.7rem;
            border-radius: 50px;
            font-weight: 600;
            box-shadow: 0 2px 5px rgba(0,0,0,0.1);
        }

        .message-time {
            display: block;
            font-size: 0.75rem;
            opacity: 0.8;
            margin-top: 0.5rem;
            text-align: right;
        }

        .message.sent .message-time {
            color: rgba(255,255,255,0.8);
        }

        .message.received .message-time {
            color: var(--gray-color);
        }

        .message-sender {
            font-weight: 600;
            margin-bottom: 0.3rem;
            display: block;
            color: var(--secondary-color);
        }

        /* Input Area */
        .chat-input-area {
            padding: 1.5rem;
            background: white;
            border-top: 1px solid rgba(0,0,0,0.05);
            position: relative;
        }

        .chat-input-form {
            display: flex;
            gap: 1rem;
        }

        .chat-input {
            flex: 1;
            padding: 1rem 1.5rem;
            border: 1px solid #ddd;
            border-radius: 12px;
            font-size: 1rem;
            transition: all 0.3s ease;
            resize: none;
            min-height: 60px;
            background: white;
            box-shadow: inset 0 2px 5px rgba(0,0,0,0.03);
        }

            .chat-input:focus {
                outline: none;
                border-color: var(--primary-color);
                box-shadow: 0 0 0 3px rgba(67,97,238,0.1), inset 0 2px 5px rgba(0,0,0,0.03);
            }

        .chat-send-btn {
            background: var(--gradient-primary);
            color: white;
            border: none;
            border-radius: 12px;
            padding: 0 2rem;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            align-self: flex-end;
            height: 60px;
            display: flex;
            align-items: center;
            justify-content: center;
            box-shadow: 0 4px 15px rgba(67,97,238,0.3);
        }

            .chat-send-btn:hover {
                transform: translateY(-2px);
                box-shadow: 0 7px 25px rgba(67,97,238,0.4);
                background: linear-gradient(135deg, #3a56e8 0%, #3730c1 100%);
            }

        /* No Messages */
        .no-messages {
            text-align: center;
            padding: 4rem 0;
            color: var(--gray-color);
        }

            .no-messages i {
                font-size: 4rem;
                opacity: 0.3;
                margin-bottom: 1.5rem;
            }

            .no-messages h3 {
                font-weight: 600;
                margin-bottom: 1rem;
                color: var(--dark-color);
            }

        /* Responsive */
        @@media (max-width: 992px) {
            .chat-detail-header {
                flex-direction: column;
                text-align: center;
            }

            .property-thumbnail {
                margin-right: 0;
                margin-bottom: 1.5rem;
            }

            .chat-back-btn {
                margin-top: 1.5rem;
            }
        }

        @@media (max-width: 768px) {
            .chat-cover-photo {
                height: 150px;
                margin-bottom: -30px;
            }

            .chat-detail-hero {
                margin: -30px 10px 2rem;
                padding: 3rem 0 1.5rem;
            }

            .chat-messages {
                height: 400px;
                padding: 1.5rem;
            }

            .message {
                max-width: 85%;
            }

            .chat-detail-title h1 {
                font-size: 1.5rem;
            }
        }

        @@media (max-width: 576px) {
            .chat-cover-photo {
                height: 120px;
            }

            .chat-detail-hero {
                padding: 2rem 0;
            }

            .property-thumbnail {
                width: 80px;
                height: 80px;
            }

            .chat-input-form {
                flex-direction: column;
            }

            .chat-send-btn {
                width: 100%;
                height: 50px;
            }

            .message {
                max-width: 90%;
                padding: 1rem;
            }
        }
    </style>
}

<!-- Cover Photo -->
<img src="@(propiedad?.PropiedadFoto ?? "https://images.unsplash.com/photo-1568605114967-8130f3a36994?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80")"
     class="chat-cover-photo"
     alt="Portada de @propiedad?.PropiedadNombre" />

<!-- Hero Section -->
<div class="chat-detail-hero">
    <div class="chat-detail-header">
        <img src="@(propiedad?.PropiedadFoto ?? "https://images.unsplash.com/photo-1568605114967-8130f3a36994?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=2070&q=80")"
             class="property-thumbnail"
             alt="@propiedad?.PropiedadNombre" />
        <div class="chat-detail-title">
            <h1>@propiedad?.PropiedadNombre</h1>
            <p>Conversación con @(currentUserId == propiedad?.RemitenteID ? propiedad?.DestinatarioNombre : propiedad?.RemitenteNombre)</p>
        </div>
    </div>
</div>

<!-- Alert Messages -->
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show mb-4" role="alert">
        <div class="d-flex align-items-center">
            <i class="fas fa-check-circle me-3 fs-4"></i>
            <div>@TempData["SuccessMessage"]</div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-warning alert-dismissible fade show mb-4" role="alert">
        <div class="d-flex align-items-center">
            <i class="fas fa-exclamation-triangle me-3 fs-4"></i>
            <div>@TempData["ErrorMessage"]</div>
        </div>
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

<!-- Chat Container -->
<div class="chat-detail-container">
    <!-- Messages Area -->
    <div class="chat-messages" id="chat-messages">
        @if (Model == null || !Model.Any())
        {
            <div class="no-messages">
                <i class="fas fa-comment-slash"></i>
                <h3>No hay mensajes en esta conversación</h3>
                <p>Envía un mensaje para iniciar el chat</p>
            </div>
        }
        else
        {
            foreach (var mensaje in Model.OrderBy(m => m.Enviado))
            {
                <div class="message @(mensaje.RemitenteID == currentUserId ? "sent" : "received") @(!mensaje.Visto && mensaje.RemitenteID != currentUserId ? "new" : "")">
                    @if (mensaje.RemitenteID != currentUserId)
                    {
                        <span class="message-sender">@mensaje.RemitenteNombre</span>
                    }
                    <p>@mensaje.Mensaje</p>
                    <span class="message-time">
                        <i class="far fa-clock"></i> @mensaje.Enviado.ToString("g")
                    </span>
                </div>
            }
        }
    </div>

    <!-- Input Area -->
    <div class="chat-input-area">
        <form asp-action="Enviar" method="post" class="chat-input-form">
            <input type="hidden" name="propiedadId" value="@propiedad?.PropiedadID" />
            <input type="hidden" name="destinatarioId" value="@(currentUserId == propiedad?.RemitenteID ? propiedad?.DestinatarioID : propiedad?.RemitenteID)" />
            <textarea name="mensaje" class="chat-input" placeholder="Escribe tu mensaje..." required></textarea>
            <button type="submit" class="chat-send-btn">
                <i class="fas fa-paper-plane me-2"></i> Enviar
            </button>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        // Scroll al final del chat
        document.addEventListener('DOMContentLoaded', function () {
            const messagesContainer = document.getElementById('chat-messages');
            messagesContainer.scrollTop = messagesContainer.scrollHeight;

            // Marcar mensajes como leídos
            const unreadMessages = document.querySelectorAll('.message.received.new');
            unreadMessages.forEach(msg => {
                const messageId = msg.dataset.id;
                if (messageId) {
                    fetch('@Url.Action("MarcarComoVisto", "Mensajes")', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({ mensajeId: messageId })
                    });
                }
            });
        });

        // Auto-resize textarea
        const textarea = document.querySelector('.chat-input');
        textarea.addEventListener('input', function () {
            this.style.height = 'auto';
            this.style.height = (this.scrollHeight) + 'px';
        });
    </script>
}