@model IEnumerable<RealEstate.Persistance.Models.dbo.MensajesModel>

@{
    ViewData["Title"] = "Mensajes";
    Layout = "_Layout"; // Asegúrate de que uses tu layout
}

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-12">
            <div class="card mb-4">

                <div class="card-body px-0 pt-0 pb-2">
                    @if (Model == null || !Model.Any())
                    {
                        <div class="alert alert-info mx-4">
                            <i class="fas fa-inbox me-2"></i> No tienes mensajes aún
                        </div>
                    }
                    else
                    {
                        <div class="table-responsive p-0">
                            <table class="table align-items-center mb-0">
                                <thead>
                                    <tr>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Conversación</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Propiedad</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Estado</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Fecha</th>
                                        <th class="text-secondary opacity-7"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model)
                                    {
                                        <tr class="@(!item.Visto && !item.EsRemitente ? "bg-gray-100" : "")">
                                            <td>
                                                <div class="d-flex px-2 py-1">
                                                    <div>
                                                        <img src="https://ui-avatars.com/api/?name=@item.RemitenteNombre&background=random"
                                                             class="avatar avatar-sm me-3" alt="avatar">
                                                    </div>
                                                    <div class="d-flex flex-column justify-content-center">
                                                        <h6 class="mb-0 text-sm">@(item.EsRemitente ? "Tú" : item.RemitenteNombre)</h6>
                                                        <p class="text-xs text-secondary mb-0">@item.Mensaje</p>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <p class="text-xs font-weight-bold mb-0">@item.PropiedadNombre</p>
                                                <p class="text-xs text-secondary mb-0">Codigo: @item.Codigo</p>
                                            </td>
                                            <td class="align-middle text-center text-sm">
                                                @if (item.EsRemitente)
                                                {
                                                    <p class="text-xs text-secondary mb-0">Enviado</p>
                                                }
                                                else
                                                {
                                                    <span class="badge badge-sm @(item.Visto ? "bg-gradient-success" : "bg-gradient-warning")">
                                                        @(item.Visto ? "Visto" : "Nuevo")
                                                    </span>
                                                }
                                            </td>
                                            <td class="align-middle text-center">
                                                <span class="text-secondary text-xs font-weight-bold">@item.Enviado.ToString("g")</span>
                                            </td>
                                            <td class="align-middle">
                                                <button onclick="abrirChat('@item.RemitenteID', '@item.DestinatarioID', '@item.PropiedadID')"
                                                        class="btn btn-sm btn-outline-primary mb-0">
                                                    <i class="fas fa-comment me-1"></i> Ver
                                                </button>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Ventana de Chat Moderna -->
<div id="chatMessengerWindow" class="position-fixed bottom-0 end-0 m-4 rounded-3 shadow-lg d-none" style="width: 400px; z-index: 1050; height: 500px; max-height: 80vh;">
    <div class="card h-100 border-0">
        <div class="card-header bg-gradient-primary text-white d-flex justify-content-between align-items-center rounded-top-3">
            <div class="d-flex align-items-center">
                <img id="chatAvatar" src="" class="avatar avatar-sm me-2" alt="avatar">
                <h6 class="mb-0" id="chatTitle">Chat</h6>
            </div>
            <button type="button" class="btn btn-sm text-white bg-dark rounded-circle p-0 fw-bold"
                    style="width: 32px; height: 32px; font-size: 18px;" onclick="cerrarVentanaChat()" title="Cerrar">
                ×
            </button>
        </div>
        <div class="card-body p-0 d-flex flex-column">
            <!-- Ajustamos el estilo para el contenedor de mensajes -->
            <div class="flex-grow-1 overflow-auto p-3" id="chatContent" style="background-color: #f8f9fa; max-height: 400px;">
                <div class="text-center text-muted py-5">
                    <i class="fas fa-comments fa-2x mb-2"></i>
                    <p>Cargando conversación...</p>
                </div>
            </div>
            <div class="p-3 border-top">
                <form asp-controller="Mensajes" asp-action="Create" id="chatForm" method="post" class="d-flex">
                    <input type="hidden" name="RemitenteID" id="remitenteInput" />
                    <input type="hidden" name="DestinatarioID" id="destinatarioInput" />
                    <input type="hidden" name="PropiedadID" id="propiedadInput" />
                    <textarea name="Mensaje" class="form-control me-2"
                              placeholder="Escribe tu mensaje..." rows="1" required></textarea>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-paper-plane"></i>
                    </button>
                </form>
            </div>
        </div>

    </div>
</div>


@section Scripts {
    <script>
        // Extensión para truncar texto
        String.prototype.truncate = function (n) {
            return this.length > n ? this.substr(0, n - 1) + '...' : this;
        };

        function abrirChat(remitenteID, destinatarioID, propiedadID) {
            const chatWindow = document.getElementById("chatMessengerWindow");
            chatWindow.classList.remove("d-none");

            document.getElementById("remitenteInput").value = remitenteID;
            document.getElementById("destinatarioInput").value = destinatarioID;
            document.getElementById("propiedadInput").value = propiedadID;

            // Cargar avatar dinámico
            document.getElementById("chatAvatar").src = `https://ui-avatars.com/api/?name=${destinatarioID}&background=random`;

            fetch(`/Mensajes/Conversacion?remitenteId=${remitenteID}&destinatarioId=${destinatarioID}&propiedadId=${propiedadID}`)
                .then(res => res.text())
                .then(html => {
                    document.getElementById("chatContent").innerHTML = html;
                    document.getElementById("chatTitle").innerText = `Chat con ${destinatarioID}`;
                    scrollToBottom();
                })
                .catch(err => {
                    console.error(err);
                    document.getElementById("chatContent").innerHTML = `
                                <div class="alert alert-danger">
                                    <i class="fas fa-exclamation-triangle me-2"></i> Error al cargar los mensajes
                                </div>`;
                });
        }

        function abrirNuevoChat() {
            // Implementar lógica para nuevo chat
            alert("Funcionalidad para nuevo mensaje");
        }

        function cerrarVentanaChat() {
            document.getElementById("chatMessengerWindow").classList.add("d-none");
        }

        function minimizarVentanaChat() {
            const content = document.getElementById("chatContent");
            const form = document.querySelector("#chatForm");

            if (content.style.display === "none") {
                content.style.display = "block";
                form.style.display = "flex";
            } else {
                content.style.display = "none";
                form.style.display = "none";
            }
        }

        function scrollToBottom() {
            const chatContent = document.getElementById("chatContent");
            chatContent.scrollTop = chatContent.scrollHeight;
        }

        // Autoajustar altura del textarea
        document.addEventListener('DOMContentLoaded', function () {
            const textarea = document.querySelector('textarea[name="Mensaje"]');

            textarea.addEventListener('input', function () {
                this.style.height = 'auto';
                this.style.height = (this.scrollHeight) + 'px';
            });
        });

    </script>
}